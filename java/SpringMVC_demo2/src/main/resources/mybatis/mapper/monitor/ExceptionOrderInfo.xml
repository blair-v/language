<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.x.dmt.dao.monitor.ExceptionOrderInfoDAO">

    <insert id="addExceptionOrderInfoList" parameterType="java.util.List" flushCache="true">
        replace into shop_exception_order (
            id,
            shop_id,
            shop_name,
            shop_full_name,
            except_order_number,
            except_type,
            except_desc,
            trade_time,
            sync_time,
            create_time,
            alert_type,
            status_type,
            check_type
        )
        values
        <foreach collection="list" item="e" index="index" separator=",">
        (
            #{e.id},
            #{e.shopId},
            #{e.shopName},
            #{e.shopFullName},
            #{e.exceptOrderNumber},
            #{e.exceptType},
            #{e.exceptDesc},
            #{e.tradeTime},
            #{e.syncTime},
            #{e.createTime},
            #{e.alertType},
            #{e.statusType},
            #{e.checkType}
        )
        </foreach>
    </insert>

    <select id="getExceptionOrderInfoListByShopTimeCheck" resultType="ExceptionOrderInfo">
        <![CDATA[
            SELECT
              id as id,
              shop_id as shopId,
              shop_name as shopName,
              shop_full_name as shopFullName,
              except_order_number as exceptOrderNumber,
              except_type as exceptType,
              except_desc as exceptDesc,
              trade_time as tradeTime,
              sync_time as syncTime,
              create_time as createTime,
              alert_type as alertType,
              status_type as statusType,
              check_type as checkType
            FROM shop_exception_order seo
            WHERE
                shop_id = #{shop_id}
            AND seo.check_type = #{check_type}
            AND ((DATE_FORMAT(seo.trade_time, '%Y-%m-%d %H:%i:%s') >= #{start_time} and DATE_FORMAT(seo.trade_time, '%Y-%m-%d %H:%i:%s') < #{end_time})
                OR
                (DATE_FORMAT(seo.sync_time, '%Y-%m-%d %H:%i:%s') >= #{start_time} and DATE_FORMAT(seo.sync_time, '%Y-%m-%d %H:%i:%s') < #{end_time}))
        ]]>
    </select>

    <select id="getExceptionOrderInfoListByShopTimeAlertStatusCheck" resultType="ExceptionOrderInfo">
        <![CDATA[
            SELECT
              id as id,
              shop_id as shopId,
              shop_name as shopName,
              shop_full_name as shopFullName,
              except_order_number as exceptOrderNumber,
              except_type as exceptType,
              except_desc as exceptDesc,
              trade_time as tradeTime,
              sync_time as syncTime,
              create_time as createTime,
              alert_type as alertType,
              status_type as statusType,
              check_type as checkType
            FROM shop_exception_order seo
            WHERE
                shop_id = #{shop_id}
            AND create_time >= #{start_time}
            AND create_time < #{end_time}
            AND alert_type = #{alert_type}
            AND status_type = #{status_type}
            AND check_type = #{check_type}
            AND except_type IN (3, 4, 5)
        ]]>
    </select>

    <update id="updateExceptionOrderInfoListAlertTypeByAlertCheck" parameterType="java.util.Map">
       <![CDATA[
            UPDATE
              shop_exception_order
            SET alert_type = #{alert_type}
            WHERE
            shop_id = #{shop_id}
            AND create_time >= #{start_time}
            AND create_time < #{end_time}
            AND alert_type = #{alert_condition}
            AND check_type = #{check_type}
            AND except_type IN (3, 4, 5)
      ]]>
    </update>

</mapper>