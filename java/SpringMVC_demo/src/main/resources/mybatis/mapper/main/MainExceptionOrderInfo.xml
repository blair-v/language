<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.x.dmt.dao.main.MainExceptionOrderInfoDAO">

    <select id="getDelayExceptionOrderInfoList" parameterType="java.util.Map" resultType="ExceptionOrderInfo">
        <![CDATA[
            SELECT
                s1.id as shopId,
                s1.name as shopName,
                s1.fullName as shopFullName,
                r1.orderNumber as exceptOrderNumber,
                1 as exceptType,
                'delay excess 1 hour Exception' as exceptDesc,
                r1.trade_time as tradeTime,
                r1.sync_time as syncTime,
                SYSDATE() as createTime
            FROM
              (select
                *
              from orders
              where
                   ((DATE_FORMAT(orders.trade_time, '%Y-%m-%d %H:%i:%s') >= #{start_time} and DATE_FORMAT(orders.trade_time, '%Y-%m-%d %H:%i:%s') < #{end_time})
                   OR
                   (DATE_FORMAT(orders.sync_time, '%Y-%m-%d %H:%i:%s') >= #{start_time} and DATE_FORMAT(orders.sync_time, '%Y-%m-%d %H:%i:%s') < #{end_time}))
               AND (orders.businessId = #{shop_id})
               AND (orders.businessType = 'SHOP')
               AND orders.status IN ('SUCCESS','REFUND','PARTIAL_REFUND')
               AND (orders.sync_time - orders.trade_time > #{diff_time})
              ) r1
              LEFT JOIN
              (
              select
                *
              from
              shop
              ) s1
            ON r1.businessId=s1.id
        ]]>
    </select>

    <select id="getSyncTimeExceptionOrderInfoList" parameterType="java.util.Map" resultType="ExceptionOrderInfo">
        <![CDATA[
            SELECT
                s1.id as shopId,
                s1.name as shopName,
                s1.fullName as shopFullName,
                r1.orderNumber as exceptOrderNumber,
                2 as exceptType,
                'sync_time < trade_time Exception' as exceptDesc,
                r1.trade_time as tradeTime,
                r1.sync_time as syncTime,
                SYSDATE() as createTime
            FROM
              (select
                *
              from orders
               WHERE (
                   (DATE_FORMAT(orders.trade_time, '%Y-%m-%d %H:%i:%s') >= #{start_time} and DATE_FORMAT(orders.trade_time, '%Y-%m-%d %H:%i:%s') < #{end_time})
                   OR
                   (DATE_FORMAT(orders.sync_time, '%Y-%m-%d %H:%i:%s') >= #{start_time} and DATE_FORMAT(orders.sync_time, '%Y-%m-%d %H:%i:%s') < #{end_time}))
               AND (orders.businessId = #{shop_id})
               AND (orders.businessType = 'SHOP')
               AND orders.status IN ('SUCCESS','REFUND','PARTIAL_REFUND')
               AND (orders.sync_time < orders.trade_time)
              ) r1
              LEFT JOIN
              (
              select
                *
              from
              shop
              ) s1
            ON r1.businessId=s1.id
        ]]>
    </select>

    <select id="getPaidExceptionOrderInfoList" resultType="ExceptionOrderInfo">
        <![CDATA[
          SELECT
            #{shop_id} as shopId,
            s1.name as shopName,
            s1.fullName as shopFullName,
            r1.orderNumber as exceptOrderNumber,
            3 as exceptType,
            'paidAmount != actuallyPaid Exception' as exceptDesc,
            r1.trade_time as tradeTime,
            r1.sync_time as syncTime,
            SYSDATE() as createTime
          FROM
            (select
                *
              from orders
            where
               (orders.businessId = #{shop_id})
            and (orders.businessType = 'SHOP')
            and (orders.paidAmount <> orders.actuallyPaid)
            and (
               (DATE_FORMAT(orders.trade_time, '%Y-%m-%d %H:%i:%s') >= #{start_time} and DATE_FORMAT(orders.trade_time, '%Y-%m-%d %H:%i:%s') < #{end_time})
               OR
               (DATE_FORMAT(orders.sync_time, '%Y-%m-%d %H:%i:%s') >= #{start_time} and DATE_FORMAT(orders.sync_time, '%Y-%m-%d %H:%i:%s') < #{end_time}))
            and orders.status IN ('SUCCESS','REFUND','PARTIAL_REFUND'))
            r1
            LEFT JOIN
            (
              select
                *
              from
              shop
            ) s1
            ON r1.businessId=s1.id
        ]]>
    </select>

    <select id="getTransactionExceptionOrderInfoList" parameterType="java.util.Map" resultType="ExceptionOrderInfo">
        <![CDATA[
          SELECT
            #{shop_id} as shopId,
            t3.name as shopName,
            t3.fullName as shopFullName,
            t1.orderNumber as exceptOrderNumber,
            4 as exceptType,
            'Transaction Amount Exception' as exceptDesc,
            t1.trade_time as tradeTime,
            t1.sync_time as syncTime,
            SYSDATE() as createTime
          FROM
            ( SELECT
                orderNumber,
                actuallyPaid,
                businessId,
                trade_time,
                sync_time
              FROM orders
              WHERE
                    (orders.businessId = #{shop_id})
                AND (orders.businessType = 'SHOP')
                AND (
                 (DATE_FORMAT(orders.trade_time, '%Y-%m-%d %H:%i:%s') >= #{start_time} and DATE_FORMAT(orders.trade_time, '%Y-%m-%d %H:%i:%s') < #{end_time})
                 OR
                 (DATE_FORMAT(orders.sync_time, '%Y-%m-%d %H:%i:%s') >= #{start_time} and DATE_FORMAT(orders.sync_time, '%Y-%m-%d %H:%i:%s') < #{end_time})
                )
                AND (orders.status IN ('SUCCESS','REFUND','PARTIAL_REFUND'))
                AND (orders.actuallyPaid = orders.paidAmount)
            ) t1
            LEFT JOIN
            ( SELECT
                orderNumber,
                SUM(amount) as total_amount
              FROM order_transaction ot
              WHERE
                ot.shop_id = #{shop_id}
                AND orderNumber in (SELECT oot.orderNumber from (
                        SELECT orderNumber from orders
                        WHERE
                            (orders.businessId = #{shop_id})
                        AND (orders.businessType = 'SHOP')
                        AND (
                         (DATE_FORMAT(orders.trade_time, '%Y-%m-%d %H:%i:%s') >= #{start_time} and DATE_FORMAT(orders.trade_time, '%Y-%m-%d %H:%i:%s') < #{end_time})
                         OR
                         (DATE_FORMAT(orders.sync_time, '%Y-%m-%d %H:%i:%s') >= #{start_time} and DATE_FORMAT(orders.sync_time, '%Y-%m-%d %H:%i:%s') < #{end_time})
                        )
                        AND (orders.status IN ('SUCCESS','REFUND','PARTIAL_REFUND'))
                        AND (orders.actuallyPaid = orders.paidAmount)
                ) oot )
                AND ot.status = 1
              GROUP BY orderNumber
            ) t2
           ON t1.orderNumber = t2.orderNumber
           LEFT JOIN
           shop t3
           on t1.businessId=t3.id
           WHERE t1.actuallyPaid != if(t2.total_amount is null,0,t2.total_amount);
        ]]>
    </select>

    <select id="getItemAmountExceptionOrderInfoList" parameterType="java.util.Map" resultType="ExceptionOrderInfo">
        <![CDATA[
          SELECT
            #{shop_id} as shopId,
            t3.name as shopName,
            t3.fullName as shopFullName,
            t1.orderNumber as exceptOrderNumber,
            5 as exceptType,
            'OrderItem Totle share price != actuallyPaid order Exception' as exceptDesc,
            t1.trade_time as tradeTime,
            t1.sync_time as syncTime,
            SYSDATE() as createTime
          FROM
            (SELECT
                orderNumber,
                actuallyPaid,
                businessId,
                trade_time,
                sync_time
            FROM
                orders
            WHERE
                  (orders.businessType = 'SHOP')
              AND (orders.businessId = #{shop_id})
              AND (
                 (DATE_FORMAT(orders.trade_time, '%Y-%m-%d %H:%i:%s') >= #{start_time} and DATE_FORMAT(orders.trade_time, '%Y-%m-%d %H:%i:%s') < #{end_time})
                 OR
                 (DATE_FORMAT(orders.sync_time, '%Y-%m-%d %H:%i:%s') >= #{start_time} and DATE_FORMAT(orders.sync_time, '%Y-%m-%d %H:%i:%s') < #{end_time})
                )
              AND (orders.status IN ('SUCCESS','REFUND','PARTIAL_REFUND'))
              AND (orders.actuallyPaid = orders.paidAmount)) t1
          LEFT JOIN
            (SELECT
              SUM(ROUND(share_price,2)) orderAmount,
              orm.order_number
            from
              orderitem orm
            where
              orm.business_id = #{shop_id}
            and combo_id is null
            and
              (DATE_FORMAT(orm.trade_time, '%Y-%m-%d %H:%i:%s') >= #{start_time} and DATE_FORMAT(orm.trade_time, '%Y-%m-%d %H:%i:%s') < #{end_time})
            GROUP BY orm.order_number) t2
          ON t1.orderNumber = t2.order_number
          LEFT JOIN
            shop t3
          ON t1.businessId=t3.id
          LEFT JOIN
			(SELECT order_number,freight
			 FROM order_delivery_extension
			 WHERE order_number in (
			   SELECT tt4.orderNumber
			   FROM (
				  SELECT orderNumber
				  FROM orders
				  WHERE
				      orders.businessId = #{shop_id}
				  AND orders.businessType = 'SHOP'
                  AND (
						(DATE_FORMAT(orders.trade_time, '%Y-%m-%d %H:%i:%s') >= #{start_time} and DATE_FORMAT(orders.trade_time, '%Y-%m-%d %H:%i:%s') < #{end_time})
						 OR
						(DATE_FORMAT(orders.sync_time, '%Y-%m-%d %H:%i:%s') >= #{start_time} and DATE_FORMAT(orders.sync_time, '%Y-%m-%d %H:%i:%s') < #{end_time})
                  )
                  AND orders.status IN ('SUCCESS','REFUND','PARTIAL_REFUND')
			   ) tt4
			 )
			) t4
		  ON t2.order_number = t4.order_number
          WHERE if(t1.actuallyPaid is null, 0, t1.actuallyPaid) <> t2.orderAmount + if(t4.freight is null,0,t4.freight)
        ]]>
    </select>
</mapper>
