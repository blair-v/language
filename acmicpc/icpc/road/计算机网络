计算机网络
 计算机向用户提供最重要的功能就是 (1)连通性 (2)共享。
   1, 网络把许多计算机连接在一起。
   2, 因特网则把许多网络连接在一起。
 路由器是实现分组交换(packet switching)的关键构件，其任务是转发收到的分组.
 *16 主机 1 向主机 2 发送数据 『
 主机 1 『
  5->4  AP1应用进程数据先传送到应用层 加上应用层首部，成为应用层 PDU
         应用层 PDU 再传送到运输层 加上运输层首部，成为运输层报文
  4->3  运输层报文再传送到网络层
         加上网络层首部，成为 IP 数据报（或分组）
  3->2  IP 数据报再传送到数据链路层
         加上链路层首部和尾部，成为数据链路层帧
  2->1  数据链路层帧再传送到物理层
         最下面的物理层把比特流传送到物理媒体
 物理传输媒体         
   电信号（或光信号）在物理媒体中传播
    从发送端物理层传送到接收端物理层
 主机2 『
  1->2 物理层接收到比特流，上交给数据链路层
  2->3 数据链路层剥去帧首部和帧尾部 取出数据部分，上交给网络层
  3->4 网络层剥去首部，取出数据部分上交给运输层
  4->5 运输层剥去首部，取出数据部分上交给应用层
  5->AP2 应用层剥去首部，取出应用程序数据上交给应用进程
 』
尽最大努力交付的好处 『
  由于传输网络不提供端到端的可靠传输服务，这就使网络中的路由器可以做得比较简单，而且价格低廉（与电信网的交换机相比较）。
  如果主机（即端系统）中的进程之间的通信需要是可靠的，那么就由网络的主机中的运输层负责（包括差错处理、流量控制等）。
』
网际协议 IP 是 TCP/IP 体系中两个最主要的协议之一。与 IP 协议配套使用的还有四个协议 ：
  ARP  (Address Resolution Protocol)
  RARP (Reverse Address Resolution Protocol)
  ICMP (Internet Control Message Protocol)
  IGMP (Internet Group Management Protocol)
IP 地址就是给每个连接在因特网上的主机（或路由器）分配一个在全世界范围是唯一的 32 位的标识符。
IP 地址 ::= { <网络号>, <主机号>} 
  A 类地址 ：   8位   +   24位   0     A8
  A 类地址 ：   16位  +  16位    10
  A 类地址 ：   24位  +   8位    110
  D 类地址 ：   多播地址          1110
  E 类地址 ：   保留为今后使用     1111
* 地址解析协议 ARP 『
   不管网络层使用的是什么协议，在实际网络的链路上传送数据帧时，最终还是必须使用硬件地址。 
   每一个主机都设有一个 ARP 高速缓存(ARP cache)，里面有所在的局域网上的各主机和路由器的 IP 地址到硬件地址的映射表，当主机 A 欲向本局域网上的某个主机 B 发送 IP 数据报时，就先在其 ARP 高速缓存中查看有无主机 B 的 IP 地址。如有，就可查出其对应的硬件地址，再将此硬件地址写入 MAC 帧，然后通过局域网将该 MAC 帧发往此硬件地址。  
 【主机 A 广播发送ARP 请求分组】 
   我是 209.0.0.5，硬件地址是 00-00-C0-15-AD-18我想知道主机 209.0.0.6 的硬件地址
 注意的问题 
  ARP 是解决同一个局域网上的主机或路由器的 IP 地址和硬件地址的映射问题。
  如果所要找的主机和源主机不在同一个局域网上，那么就要通过 ARP 找到一个位于本局域网上的某个路由器的硬件地址，然后把分组发送给这个路由器，让这个路由器把分组转发给下一个网络。剩下的工作就由下一个网络来做。
』
4.2.5  IP 数据报的格式 
  一个 IP 数据报由首部和数据两部分组成。
  首部的前一部分是固定长度，共 20 字节，是所有 IP 数据报必须具有的。
  IP数据报首部 -> 协议字段指出应将数据部分交给哪一个进程
  1985年，三级的IP地址划分子网纯属一个单位内部的事情。单位对外仍然表现为没有划分子网的网络。
  从主机号借用若干个位作为子网号 subnet-id，而主机号 host-id 也就相应减少了若干个位。
  IP地址 ::= {<网络号>, <子网号>, <主机号>}  
  路由器在和相邻路由器交换路由信息时，必须把自己所在网络（或子网）的子网掩码告诉相邻路由器。

4.4   网际控制报文协议 ICMP 『
  作用 ： 为了提高 IP 数据报交付成功的机会。
  ICMP 报文作为 IP 层数据报的数据，加上数据报的首部，组成 IP 数据报发送出去。』
4.4.1  ICMP 报文的种类 『 两种，即 ICMP 差错报告报文和 ICMP 询问报文。 』
4.5 IGMP 
  IGMP 使用 IP 数据报传递其报文（即 IGMP 报文加上IP首部构成IP数据报），但它也向 IP 提供服务。
  IGMP 可分为两个阶段 『
    第一阶段：当某个主机加入新的多播组时，该主机应向多播组的多播地址发送IGMP 报文，声明自己要成为该组的成员。本地的多播路由器收到 IGMP 报文后，将组员关系转发给因特网上的其他多播路由器。
    第二阶段：因为组成员关系是动态的，因此本地多播路由器要周期性地探询本地局域网上的主机，以便知道这些主机是否还继续是组的成员。』
《计算机网络 3》 运输层
  *两个主机进行通信实际上就是两个主机中的应用进程互相通信。应用进程之间的通信又称为端到端的通信。
  *运输层的一个很重要的功能就是复用和分用。应用层不同进程的报文通过不同的端口向下交到运输层，再往下就共用网络层提供的服务。
  运输层为应用进程之间提供端到端的逻辑通信（但网络层是为主机之间提供逻辑通信）
  运输层需要有两种不同的运输协议，即面向连接的 TCP 和无连接的 UDP。 
  套接字 socket = (IP地址: 端口号)  
5.6.2  超时重传时间的选择
  TCP 每发送一个报文段，就对这个报文段设置一次计时器。只要计时器设置的重传时间到但还没有收到确认，就要重传这一报文段。
5.7  TCP 的流量控制 
  利用滑动窗口机制可以很方便地在 TCP 连接上实现流量控制 
  流量控制所要做的就是抑制发送端发送数据的速率，以便使接收端来得及接收。 
5.8   TCP的拥塞控制  : 慢速启动算法  快速重传算法 
5-9    TCP 的运输连接管理
 运输连接就有三个阶段，即：连接建立、数据传送和连接释放。
 连接建立过程中要解决以下三个问题：
  (1), 要使每一方能够确知对方的存在。
  (2), 要允许双方协商一些参数（如最大报文段长度，最大窗口大小，服务质量等）。
  (3), 能够对运输实体资源（如缓存大小，连接表中的项目等）进行分配。   
 TCP 连接的建立都是采用客户服务器方式。
** TCP小插曲
** 确认 ACK —— 只有当 ACK = 1 时确认号字段才有效。当 ACK = 0 时，确认号无效
** 同步 SYN —— 同步 SYN = 1 表示这是一个连接请求或连接接受报文。 
** 终止 FIN (FINis) —— 用来释放一个连接。FIN = 1 表明此报文段的发送端的数据已发送完毕，并要求释放运输连接。 
5.9.1  TCP 的连接建立
  用三次握手建立 TCP 连接
 第一次握手
  A 的 TCP 向 B 发出连接请求报文段，其首部中的
  同步位 SYN = 1，并选择序号 seq = x，表明传送
  数据时的第一个数据字节的序号是 x。{
    SYN = 1, seq = x
  }
 第二次握手 
  B 的 TCP 收到连接请求报文段后，如同意，则发回确认。
  B 在确认报文段中应使 SYN = 1，使 ACK = 1，
   其确认号ack = x + 1，自己选择的序号 seq = y。{
     SYN = 1, ACK = 1, seq = y, ack = x + 1
   }
 第三次握手
  A 收到此报文段后向 B 给出确认，其 ACK = 1，确认号 ack = y + 1。
  A 的 TCP 通知上层应用进程，连接已经建立

  B 的 TCP 收到主机 A 的确认后，也通知其上层
    应用进程：TCP 连接已经建立。 {
      ACK = 1, seq = x + 1, ack = y + 1
  }
TCP 的连接释放 【四次挥手】
 数据传输结束后，通信的双方都可释放连接。
   现在 A 的应用进程先向其 TCP 发出连接释放
   报文段，并停止再发送数据，主动关闭 TCP 
   连接。
 第一次挥手  
  A 把连接释放报文段首部的 FIN = 1，其序号
   seq = u，等待 B 的确认。 {
    FIN = 1, seq = u
  }
 第二次挥手
   B 发出确认，确认号 ack = u + 1，
   而这个报文段自己的序号 seq = v。TCP 服务器进程通知高层应用进程。
   从 A 到 B 这个方向的连接就释放了，TCP 连接处于半关闭状态。B 若发送数据，A 仍要接收{
     ACK = 1, seq = v, ack= u + 1
   }
 第三次挥手
   若 B 已经没有要向 A 发送的数据，
   其应用进程就通知 TCP 释放连接。 FIN = 1, ACK = 1, seq = w, ack= u + 1
 第四次挥手
   A 收到连接释放报文段后，必须发出确认 {
     ACK = 1, seq = u + 1, ack = w + 1
   }
TCP为什么要三次握手，不是两次四次？ 参见 ： http://blog.csdn.net/robby_chan/article/details/12282581
三次握手的最主要目的是保证连接是双工的，可靠更多的是通过重传机制来保证的。
TCP的三次握手最主要是防止已过期的连接再次传到被连接再次传到被连接的主机。
2. 三次握手改成仅需要两次握手，死锁是可能发生
考虑计算机A和B之间的通信，假定B给A发送一个连接请求分组，A收到了这个分组，并发送了确认应答分组。按照两次握手的协定，A认为连接已经成功地建立了，可以开始发送数据分组。可是，B在A的应答分组在传输中被丢失的情况下，将不知道A是否已准备好，不知道A建议什么样的序列号，B甚至怀疑A是否收到自己的连接请求分组。在这种情况下，B认为连接还未建立成功，将忽略A发来的任何数据分组，只等待连接确认应答分组。而A在发出的分组超时后，重复发送同样的分组。这样就形成了死锁机。
IP地址位数=网络位数+主机位数=32.A类网络位数是8位，子网掩码就是255.0.0.0
A类网络加长子网掩码到16位就把一个A类网络划分为256个B类网络同样大小的网络
